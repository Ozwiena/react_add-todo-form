{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","completed","title","id","TodoList","todos","map","username","getUser","userId","users","find","usedTodos","getMaxTodoId","tasks","todoIds","i","length","push","sort","task1","task2","App","useState","newTodos","setTodos","todoTitle","setTodoTitle","selectedUser","setSelectedUser","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","newTask","Number","undefined","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acc5d374.chunk.js","sourcesContent":["export interface User {\n  id: number,\n  name: string,\n  email: string,\n}\n\ninterface UserProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { UserInfo, User } from '../UserInfo';\n\nexport interface Todo {\n  id: number,\n  userId: number,\n  title: string,\n  completed: boolean,\n  user: User | null,\n}\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const { completed, title, user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo, TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/TodoInfo';\nimport { User } from './components/UserInfo';\nimport users from './api/users';\nimport todos from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = users.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const usedTodos: Todo[] = todos.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nfunction getMaxTodoId(tasks: Todo[]) {\n  const todoIds = [];\n\n  for (let i = 0; i < tasks.length; i += 1) {\n    todoIds.push(tasks[i].id);\n  }\n\n  return todoIds.sort((task1, task2) => task2 - task1)[0];\n}\n\nexport const App = () => {\n  /* const [todosWithUser, setTodos] = useState<Todo[]>(() => usedTodos.map(\n    todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId) || null,\n    }),\n  ));\n  */\n\n  const [newTodos, setTodos] = useState(usedTodos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleUserChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    if (hasUserError) {\n      setHasUserError(false);\n    } else {\n      setHasUserError(false);\n      setSelectedUser(+event.target.value);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todoTitle) {\n      setHasTitleError(true);\n    } else {\n      setHasTitleError(false);\n    }\n\n    if (!selectedUser) {\n      setHasUserError(true);\n    } else {\n      setHasUserError(false);\n    }\n\n    if (todoTitle && selectedUser) {\n      const newTask = {\n        id: getMaxTodoId(usedTodos) + 1,\n        title: todoTitle,\n        completed: false,\n        userId: Number(selectedUser),\n        user: getUser(Number(selectedUser)),\n      };\n\n      if (newTask !== undefined) {\n        setTodos([...newTodos, newTask]);\n      }\n\n      setTodoTitle('');\n      setSelectedUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todoTitle}\n            onChange={event => {\n              setTodoTitle(event.target.value);\n              setHasTitleError(!(event.target.value.length > 0));\n            }}\n            placeholder=\"Enter a title\"\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              users.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))\n            }\n          </select>\n\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}